术语:
	dbproxy	  	== db代理服务器，svr读写db都通过dbproxy做转发
	svr  	  	== 需要读写db的业务服务器。
	db	  		==  mysql, mongodb, redis

问题：
	传统项目，svr读写db,一个表（集合）需要加减字段名，都需要人工修改dbproxy的读写字段代码。
	部署阶段，需要写个db脚本，初始化表结构。
	这种做法导致修改一个表字段，需要烦闷地修改db脚本，svr读写代码，dbproxy读写代码。 任意一个地方少改或者改错，就GG。

设计目的：
	消灭重复多余人工容易犯错的手动活。
	只提供大多数传统db操作，特殊少用的db操作忽略，不然没办法做得通用。
	修改一个表字段，只需要改protobuf文件， svr读写代码（这里没办法偷懒的）。
	方便转换到不同db。

缺点：
	依赖protobuf3

功能：
	用protobuf定义表字段。
	部署服务器不需要你写数据库脚本创建db表，dbproxy首次连接db的时候已经为你做了。
	当你修改db表字段时，不需要手工修改db代理服务器代码，只需要更新protobuf导出cpp文件重新编译，就支持读写新的字段。
	编译脚本，自动检查protobuf依赖关系.
	用户连接限制

实现方法：
	利用用protobuf3对象在C++内存是个动态对象，能知道每个字段名和值。 动态地实现dbproxy的读写。
	




	

	

	